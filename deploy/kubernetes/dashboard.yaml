apiVersion: v1
kind: ServiceAccount
metadata:
  name: codedance-dashboard
  namespace: codedance-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: codedance-dashboard-role
rules:
- apiGroups: ["deploy.codedance.io"]
  resources: ["canarydeployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["deploy.codedance.io"]
  resources: ["canarydeployments/status"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: codedance-dashboard-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: codedance-dashboard-role
subjects:
- kind: ServiceAccount
  name: codedance-dashboard
  namespace: codedance-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codedance-dashboard
  namespace: codedance-system
  labels:
    app: codedance-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codedance-dashboard
  template:
    metadata:
      labels:
        app: codedance-dashboard
    spec:
      serviceAccountName: codedance-dashboard
      containers:
      - name: dashboard
        image: codedance-dashboard:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: codedance-dashboard
  namespace: codedance-system
  labels:
    app: codedance-dashboard
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: codedance-dashboard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codedance-dashboard
  namespace: codedance-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: codedance.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codedance-dashboard
            port:
              number: 80
